// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#ifndef PROTOBUF_cs_2eproto__INCLUDED
#define PROTOBUF_cs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace cs {
class C2S_Attack;
class C2S_AttackDefaultTypeInternal;
extern C2S_AttackDefaultTypeInternal _C2S_Attack_default_instance_;
class C2S_Login;
class C2S_LoginDefaultTypeInternal;
extern C2S_LoginDefaultTypeInternal _C2S_Login_default_instance_;
class C2S_Move;
class C2S_MoveDefaultTypeInternal;
extern C2S_MoveDefaultTypeInternal _C2S_Move_default_instance_;
class S2C_AllPos;
class S2C_AllPosDefaultTypeInternal;
extern S2C_AllPosDefaultTypeInternal _S2C_AllPos_default_instance_;
class S2C_Attack;
class S2C_AttackDefaultTypeInternal;
extern S2C_AttackDefaultTypeInternal _S2C_Attack_default_instance_;
class S2C_Login;
class S2C_LoginDefaultTypeInternal;
extern S2C_LoginDefaultTypeInternal _S2C_Login_default_instance_;
class S2C_Move;
class S2C_MoveDefaultTypeInternal;
extern S2C_MoveDefaultTypeInternal _S2C_Move_default_instance_;
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
}  // namespace cs

namespace cs {

namespace protobuf_cs_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cs_2eproto

enum ProtoID {
  ID_NULL = 0,
  ID_C2S_Login = 10001,
  ID_S2C_Login = 10002,
  ID_C2S_Move = 10003,
  ID_S2C_Move = 10004,
  ID_C2S_Attack = 10005,
  ID_S2C_Attaqk = 10006,
  ID_S2C_AllPos = 10007,
  ProtoID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProtoID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProtoID_IsValid(int value);
const ProtoID ProtoID_MIN = ID_NULL;
const ProtoID ProtoID_MAX = ID_S2C_AllPos;
const int ProtoID_ARRAYSIZE = ProtoID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoID_descriptor();
inline const ::std::string& ProtoID_Name(ProtoID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoID_descriptor(), value);
}
inline bool ProtoID_Parse(
    const ::std::string& name, ProtoID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoID>(
    ProtoID_descriptor(), name, value);
}
// ===================================================================

class C2S_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.C2S_Login) */ {
 public:
  C2S_Login();
  virtual ~C2S_Login();

  C2S_Login(const C2S_Login& from);

  inline C2S_Login& operator=(const C2S_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Login& default_instance();

  static inline const C2S_Login* internal_default_instance() {
    return reinterpret_cast<const C2S_Login*>(
               &_C2S_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C2S_Login* other);

  // implements Message ----------------------------------------------

  inline C2S_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Login& from);
  void MergeFrom(const C2S_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:cs.C2S_Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const PROTOBUF_FINAL { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 dwx = 2;
  void clear_dwx();
  static const int kDwxFieldNumber = 2;
  ::google::protobuf::uint32 dwx() const;
  void set_dwx(::google::protobuf::uint32 value);

  // uint32 dwy = 3;
  void clear_dwy();
  static const int kDwyFieldNumber = 3;
  ::google::protobuf::uint32 dwy() const;
  void set_dwy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 dwx_;
  ::google::protobuf::uint32 dwy_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.S2C_Login) */ {
 public:
  S2C_Login();
  virtual ~S2C_Login();

  S2C_Login(const S2C_Login& from);

  inline S2C_Login& operator=(const S2C_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Login& default_instance();

  static inline const S2C_Login* internal_default_instance() {
    return reinterpret_cast<const S2C_Login*>(
               &_S2C_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(S2C_Login* other);

  // implements Message ----------------------------------------------

  inline S2C_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Login& from);
  void MergeFrom(const S2C_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.S2C_Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.C2S_Move) */ {
 public:
  C2S_Move();
  virtual ~C2S_Move();

  C2S_Move(const C2S_Move& from);

  inline C2S_Move& operator=(const C2S_Move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Move& default_instance();

  static inline const C2S_Move* internal_default_instance() {
    return reinterpret_cast<const C2S_Move*>(
               &_C2S_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(C2S_Move* other);

  // implements Message ----------------------------------------------

  inline C2S_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Move& from);
  void MergeFrom(const C2S_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dwX = 1;
  void clear_dwx();
  static const int kDwXFieldNumber = 1;
  ::google::protobuf::uint32 dwx() const;
  void set_dwx(::google::protobuf::uint32 value);

  // uint32 dwY = 2;
  void clear_dwy();
  static const int kDwYFieldNumber = 2;
  ::google::protobuf::uint32 dwy() const;
  void set_dwy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.C2S_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dwx_;
  ::google::protobuf::uint32 dwy_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.S2C_Move) */ {
 public:
  S2C_Move();
  virtual ~S2C_Move();

  S2C_Move(const S2C_Move& from);

  inline S2C_Move& operator=(const S2C_Move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Move& default_instance();

  static inline const S2C_Move* internal_default_instance() {
    return reinterpret_cast<const S2C_Move*>(
               &_S2C_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(S2C_Move* other);

  // implements Message ----------------------------------------------

  inline S2C_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Move& from);
  void MergeFrom(const S2C_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dwUid = 1;
  void clear_dwuid();
  static const int kDwUidFieldNumber = 1;
  ::google::protobuf::uint32 dwuid() const;
  void set_dwuid(::google::protobuf::uint32 value);

  // uint32 dwX = 2;
  void clear_dwx();
  static const int kDwXFieldNumber = 2;
  ::google::protobuf::uint32 dwx() const;
  void set_dwx(::google::protobuf::uint32 value);

  // uint32 dwY = 3;
  void clear_dwy();
  static const int kDwYFieldNumber = 3;
  ::google::protobuf::uint32 dwy() const;
  void set_dwy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.S2C_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dwuid_;
  ::google::protobuf::uint32 dwx_;
  ::google::protobuf::uint32 dwy_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_Attack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.C2S_Attack) */ {
 public:
  C2S_Attack();
  virtual ~C2S_Attack();

  C2S_Attack(const C2S_Attack& from);

  inline C2S_Attack& operator=(const C2S_Attack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Attack& default_instance();

  static inline const C2S_Attack* internal_default_instance() {
    return reinterpret_cast<const C2S_Attack*>(
               &_C2S_Attack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(C2S_Attack* other);

  // implements Message ----------------------------------------------

  inline C2S_Attack* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_Attack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_Attack& from);
  void MergeFrom(const C2S_Attack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_Attack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dwTarget = 1;
  void clear_dwtarget();
  static const int kDwTargetFieldNumber = 1;
  ::google::protobuf::uint32 dwtarget() const;
  void set_dwtarget(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.C2S_Attack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dwtarget_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_Attack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.S2C_Attack) */ {
 public:
  S2C_Attack();
  virtual ~S2C_Attack();

  S2C_Attack(const S2C_Attack& from);

  inline S2C_Attack& operator=(const S2C_Attack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Attack& default_instance();

  static inline const S2C_Attack* internal_default_instance() {
    return reinterpret_cast<const S2C_Attack*>(
               &_S2C_Attack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(S2C_Attack* other);

  // implements Message ----------------------------------------------

  inline S2C_Attack* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_Attack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_Attack& from);
  void MergeFrom(const S2C_Attack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_Attack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:cs.S2C_Attack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_AllPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cs.S2C_AllPos) */ {
 public:
  S2C_AllPos();
  virtual ~S2C_AllPos();

  S2C_AllPos(const S2C_AllPos& from);

  inline S2C_AllPos& operator=(const S2C_AllPos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_AllPos& default_instance();

  static inline const S2C_AllPos* internal_default_instance() {
    return reinterpret_cast<const S2C_AllPos*>(
               &_S2C_AllPos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(S2C_AllPos* other);

  // implements Message ----------------------------------------------

  inline S2C_AllPos* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_AllPos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_AllPos& from);
  void MergeFrom(const S2C_AllPos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_AllPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cs.User users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  const ::cs::User& users(int index) const;
  ::cs::User* mutable_users(int index);
  ::cs::User* add_users();
  ::google::protobuf::RepeatedPtrField< ::cs::User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::cs::User >&
      users() const;

  // @@protoc_insertion_point(class_scope:cs.S2C_AllPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::cs::User > users_;
  mutable int _cached_size_;
  friend struct protobuf_cs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Login

// -------------------------------------------------------------------

// User

// uint32 uid = 1;
inline void User::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 User::uid() const {
  // @@protoc_insertion_point(field_get:cs.User.uid)
  return uid_;
}
inline void User::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:cs.User.uid)
}

// uint32 dwx = 2;
inline void User::clear_dwx() {
  dwx_ = 0u;
}
inline ::google::protobuf::uint32 User::dwx() const {
  // @@protoc_insertion_point(field_get:cs.User.dwx)
  return dwx_;
}
inline void User::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.User.dwx)
}

// uint32 dwy = 3;
inline void User::clear_dwy() {
  dwy_ = 0u;
}
inline ::google::protobuf::uint32 User::dwy() const {
  // @@protoc_insertion_point(field_get:cs.User.dwy)
  return dwy_;
}
inline void User::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.User.dwy)
}

// -------------------------------------------------------------------

// S2C_Login

// uint32 uid = 1;
inline void S2C_Login::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Login::uid() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Login.uid)
  return uid_;
}
inline void S2C_Login::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Login.uid)
}

// -------------------------------------------------------------------

// C2S_Move

// uint32 dwX = 1;
inline void C2S_Move::clear_dwx() {
  dwx_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Move::dwx() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Move.dwX)
  return dwx_;
}
inline void C2S_Move::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Move.dwX)
}

// uint32 dwY = 2;
inline void C2S_Move::clear_dwy() {
  dwy_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Move::dwy() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Move.dwY)
  return dwy_;
}
inline void C2S_Move::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Move.dwY)
}

// -------------------------------------------------------------------

// S2C_Move

// uint32 dwUid = 1;
inline void S2C_Move::clear_dwuid() {
  dwuid_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Move::dwuid() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwUid)
  return dwuid_;
}
inline void S2C_Move::set_dwuid(::google::protobuf::uint32 value) {
  
  dwuid_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwUid)
}

// uint32 dwX = 2;
inline void S2C_Move::clear_dwx() {
  dwx_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Move::dwx() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwX)
  return dwx_;
}
inline void S2C_Move::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwX)
}

// uint32 dwY = 3;
inline void S2C_Move::clear_dwy() {
  dwy_ = 0u;
}
inline ::google::protobuf::uint32 S2C_Move::dwy() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwY)
  return dwy_;
}
inline void S2C_Move::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwY)
}

// -------------------------------------------------------------------

// C2S_Attack

// uint32 dwTarget = 1;
inline void C2S_Attack::clear_dwtarget() {
  dwtarget_ = 0u;
}
inline ::google::protobuf::uint32 C2S_Attack::dwtarget() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Attack.dwTarget)
  return dwtarget_;
}
inline void C2S_Attack::set_dwtarget(::google::protobuf::uint32 value) {
  
  dwtarget_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Attack.dwTarget)
}

// -------------------------------------------------------------------

// S2C_Attack

// string name = 1;
inline void S2C_Attack::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2C_Attack::name() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Attack.name)
  return name_.GetNoArena();
}
inline void S2C_Attack::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cs.S2C_Attack.name)
}
#if LANG_CXX11
inline void S2C_Attack::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cs.S2C_Attack.name)
}
#endif
inline void S2C_Attack::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cs.S2C_Attack.name)
}
inline void S2C_Attack::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cs.S2C_Attack.name)
}
inline ::std::string* S2C_Attack::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cs.S2C_Attack.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2C_Attack::release_name() {
  // @@protoc_insertion_point(field_release:cs.S2C_Attack.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2C_Attack::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cs.S2C_Attack.name)
}

// -------------------------------------------------------------------

// S2C_AllPos

// repeated .cs.User users = 1;
inline int S2C_AllPos::users_size() const {
  return users_.size();
}
inline void S2C_AllPos::clear_users() {
  users_.Clear();
}
inline const ::cs::User& S2C_AllPos::users(int index) const {
  // @@protoc_insertion_point(field_get:cs.S2C_AllPos.users)
  return users_.Get(index);
}
inline ::cs::User* S2C_AllPos::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:cs.S2C_AllPos.users)
  return users_.Mutable(index);
}
inline ::cs::User* S2C_AllPos::add_users() {
  // @@protoc_insertion_point(field_add:cs.S2C_AllPos.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::cs::User >*
S2C_AllPos::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:cs.S2C_AllPos.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::cs::User >&
S2C_AllPos::users() const {
  // @@protoc_insertion_point(field_list:cs.S2C_AllPos.users)
  return users_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace cs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cs::ProtoID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cs::ProtoID>() {
  return ::cs::ProtoID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cs_2eproto__INCLUDED
