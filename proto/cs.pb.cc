// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cs {
class C2S_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Login> {
} _C2S_Login_default_instance_;
class UserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<User> {
} _User_default_instance_;
class S2C_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Login> {
} _S2C_Login_default_instance_;
class C2S_MoveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Move> {
} _C2S_Move_default_instance_;
class S2C_MoveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Move> {
} _S2C_Move_default_instance_;
class C2S_AttackDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Attack> {
} _C2S_Attack_default_instance_;
class S2C_AttackDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Attack> {
} _S2C_Attack_default_instance_;
class S2C_AllPosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_AllPos> {
} _S2C_AllPos_default_instance_;

namespace protobuf_cs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, dwx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, dwy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Login, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Move, dwx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Move, dwy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Move, dwuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Move, dwx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Move, dwy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Attack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Attack, dwtarget_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Attack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Attack, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AllPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AllPos, users_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(C2S_Login)},
  { 5, -1, sizeof(User)},
  { 13, -1, sizeof(S2C_Login)},
  { 19, -1, sizeof(C2S_Move)},
  { 26, -1, sizeof(S2C_Move)},
  { 34, -1, sizeof(C2S_Attack)},
  { 40, -1, sizeof(S2C_Attack)},
  { 46, -1, sizeof(S2C_AllPos)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Attack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Attack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_AllPos_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _C2S_Login_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _User_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _S2C_Login_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _C2S_Move_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _S2C_Move_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _C2S_Attack_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _S2C_Attack_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _S2C_AllPos_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _C2S_Login_default_instance_.DefaultConstruct();
  _User_default_instance_.DefaultConstruct();
  _S2C_Login_default_instance_.DefaultConstruct();
  _C2S_Move_default_instance_.DefaultConstruct();
  _S2C_Move_default_instance_.DefaultConstruct();
  _C2S_Attack_default_instance_.DefaultConstruct();
  _S2C_Attack_default_instance_.DefaultConstruct();
  _S2C_AllPos_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010cs.proto\022\002cs\"\013\n\tC2S_Login\"-\n\004User\022\013\n\003u"
      "id\030\001 \001(\r\022\013\n\003dwx\030\002 \001(\r\022\013\n\003dwy\030\003 \001(\r\"\030\n\tS2"
      "C_Login\022\013\n\003uid\030\001 \001(\r\"$\n\010C2S_Move\022\013\n\003dwX\030"
      "\001 \001(\r\022\013\n\003dwY\030\002 \001(\r\"3\n\010S2C_Move\022\r\n\005dwUid\030"
      "\001 \001(\r\022\013\n\003dwX\030\002 \001(\r\022\013\n\003dwY\030\003 \001(\r\"\036\n\nC2S_A"
      "ttack\022\020\n\010dwTarget\030\001 \001(\r\"\032\n\nS2C_Attack\022\014\n"
      "\004name\030\001 \001(\t\"%\n\nS2C_AllPos\022\027\n\005users\030\001 \003(\013"
      "2\010.cs.User*\234\001\n\007ProtoID\022\013\n\007ID_NULL\020\000\022\021\n\014I"
      "D_C2S_Login\020\221N\022\021\n\014ID_S2C_Login\020\222N\022\020\n\013ID_"
      "C2S_Move\020\223N\022\020\n\013ID_S2C_Move\020\224N\022\022\n\rID_C2S_"
      "Attack\020\225N\022\022\n\rID_S2C_Attaqk\020\226N\022\022\n\rID_S2C_"
      "AllPos\020\227Nb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 457);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cs.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cs_2eproto

const ::google::protobuf::EnumDescriptor* ProtoID_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[0];
}
bool ProtoID_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Login::C2S_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.C2S_Login)
}
C2S_Login::C2S_Login(const C2S_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cs.C2S_Login)
}

void C2S_Login::SharedCtor() {
  _cached_size_ = 0;
}

C2S_Login::~C2S_Login() {
  // @@protoc_insertion_point(destructor:cs.C2S_Login)
  SharedDtor();
}

void C2S_Login::SharedDtor() {
}

void C2S_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Login::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Login& C2S_Login::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Login* C2S_Login::New(::google::protobuf::Arena* arena) const {
  C2S_Login* n = new C2S_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.C2S_Login)
}

bool C2S_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.C2S_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:cs.C2S_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.C2S_Login)
  return false;
#undef DO_
}

void C2S_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.C2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:cs.C2S_Login)
}

::google::protobuf::uint8* C2S_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.C2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:cs.C2S_Login)
  return target;
}

size_t C2S_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.C2S_Login)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.C2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.C2S_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.C2S_Login)
    MergeFrom(*source);
  }
}

void C2S_Login::MergeFrom(const C2S_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.C2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void C2S_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.C2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Login::CopyFrom(const C2S_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.C2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Login::IsInitialized() const {
  return true;
}

void C2S_Login::Swap(C2S_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Login::InternalSwap(C2S_Login* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Login::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Login

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUidFieldNumber;
const int User::kDwxFieldNumber;
const int User::kDwyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&uid_) + sizeof(dwy_));
  // @@protoc_insertion_point(copy_constructor:cs.User)
}

void User::SharedCtor() {
  ::memset(&uid_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&uid_) + sizeof(dwy_));
  _cached_size_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:cs.User)
  SharedDtor();
}

void User::SharedDtor() {
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.User)
  ::memset(&uid_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&uid_) + sizeof(dwy_));
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 dwx = 2;
  if (this->dwx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dwx(), output);
  }

  // uint32 dwy = 3;
  if (this->dwy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dwy(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 dwx = 2;
  if (this->dwx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dwx(), target);
  }

  // uint32 dwy = 3;
  if (this->dwy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dwy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.User)
  size_t total_size = 0;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 dwx = 2;
  if (this->dwx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwx());
  }

  // uint32 dwy = 3;
  if (this->dwy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.dwx() != 0) {
    set_dwx(from.dwx());
  }
  if (from.dwy() != 0) {
    set_dwy(from.dwy());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  std::swap(uid_, other->uid_);
  std::swap(dwx_, other->dwx_);
  std::swap(dwy_, other->dwy_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// uint32 uid = 1;
void User::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 User::uid() const {
  // @@protoc_insertion_point(field_get:cs.User.uid)
  return uid_;
}
void User::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:cs.User.uid)
}

// uint32 dwx = 2;
void User::clear_dwx() {
  dwx_ = 0u;
}
::google::protobuf::uint32 User::dwx() const {
  // @@protoc_insertion_point(field_get:cs.User.dwx)
  return dwx_;
}
void User::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.User.dwx)
}

// uint32 dwy = 3;
void User::clear_dwy() {
  dwy_ = 0u;
}
::google::protobuf::uint32 User::dwy() const {
  // @@protoc_insertion_point(field_get:cs.User.dwy)
  return dwy_;
}
void User::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.User.dwy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Login::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Login::S2C_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_Login)
}
S2C_Login::S2C_Login(const S2C_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:cs.S2C_Login)
}

void S2C_Login::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

S2C_Login::~S2C_Login() {
  // @@protoc_insertion_point(destructor:cs.S2C_Login)
  SharedDtor();
}

void S2C_Login::SharedDtor() {
}

void S2C_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Login::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Login& S2C_Login::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Login* S2C_Login::New(::google::protobuf::Arena* arena) const {
  S2C_Login* n = new S2C_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_Login)
  uid_ = 0u;
}

bool S2C_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_Login)
  return false;
#undef DO_
}

void S2C_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_Login)
}

::google::protobuf::uint8* S2C_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_Login)
  return target;
}

size_t S2C_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_Login)
  size_t total_size = 0;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_Login)
    MergeFrom(*source);
  }
}

void S2C_Login::MergeFrom(const S2C_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void S2C_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Login::CopyFrom(const S2C_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Login::IsInitialized() const {
  return true;
}

void S2C_Login::Swap(S2C_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Login::InternalSwap(S2C_Login* other) {
  std::swap(uid_, other->uid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Login::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Login

// uint32 uid = 1;
void S2C_Login::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 S2C_Login::uid() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Login.uid)
  return uid_;
}
void S2C_Login::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Login.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Move::kDwXFieldNumber;
const int C2S_Move::kDwYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Move::C2S_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.C2S_Move)
}
C2S_Move::C2S_Move(const C2S_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwx_, &from.dwx_,
    reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwx_) + sizeof(dwy_));
  // @@protoc_insertion_point(copy_constructor:cs.C2S_Move)
}

void C2S_Move::SharedCtor() {
  ::memset(&dwx_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwx_) + sizeof(dwy_));
  _cached_size_ = 0;
}

C2S_Move::~C2S_Move() {
  // @@protoc_insertion_point(destructor:cs.C2S_Move)
  SharedDtor();
}

void C2S_Move::SharedDtor() {
}

void C2S_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Move::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Move& C2S_Move::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Move* C2S_Move::New(::google::protobuf::Arena* arena) const {
  C2S_Move* n = new C2S_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.C2S_Move)
  ::memset(&dwx_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwx_) + sizeof(dwy_));
}

bool C2S_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.C2S_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dwX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.C2S_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.C2S_Move)
  return false;
#undef DO_
}

void C2S_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.C2S_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwX = 1;
  if (this->dwx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dwx(), output);
  }

  // uint32 dwY = 2;
  if (this->dwy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dwy(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.C2S_Move)
}

::google::protobuf::uint8* C2S_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.C2S_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwX = 1;
  if (this->dwx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dwx(), target);
  }

  // uint32 dwY = 2;
  if (this->dwy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dwy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.C2S_Move)
  return target;
}

size_t C2S_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.C2S_Move)
  size_t total_size = 0;

  // uint32 dwX = 1;
  if (this->dwx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwx());
  }

  // uint32 dwY = 2;
  if (this->dwy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.C2S_Move)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.C2S_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.C2S_Move)
    MergeFrom(*source);
  }
}

void C2S_Move::MergeFrom(const C2S_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.C2S_Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dwx() != 0) {
    set_dwx(from.dwx());
  }
  if (from.dwy() != 0) {
    set_dwy(from.dwy());
  }
}

void C2S_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.C2S_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Move::CopyFrom(const C2S_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.C2S_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Move::IsInitialized() const {
  return true;
}

void C2S_Move::Swap(C2S_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Move::InternalSwap(C2S_Move* other) {
  std::swap(dwx_, other->dwx_);
  std::swap(dwy_, other->dwy_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Move::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Move

// uint32 dwX = 1;
void C2S_Move::clear_dwx() {
  dwx_ = 0u;
}
::google::protobuf::uint32 C2S_Move::dwx() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Move.dwX)
  return dwx_;
}
void C2S_Move::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Move.dwX)
}

// uint32 dwY = 2;
void C2S_Move::clear_dwy() {
  dwy_ = 0u;
}
::google::protobuf::uint32 C2S_Move::dwy() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Move.dwY)
  return dwy_;
}
void C2S_Move::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Move.dwY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Move::kDwUidFieldNumber;
const int S2C_Move::kDwXFieldNumber;
const int S2C_Move::kDwYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Move::S2C_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_Move)
}
S2C_Move::S2C_Move(const S2C_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwuid_, &from.dwuid_,
    reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwuid_) + sizeof(dwy_));
  // @@protoc_insertion_point(copy_constructor:cs.S2C_Move)
}

void S2C_Move::SharedCtor() {
  ::memset(&dwuid_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwuid_) + sizeof(dwy_));
  _cached_size_ = 0;
}

S2C_Move::~S2C_Move() {
  // @@protoc_insertion_point(destructor:cs.S2C_Move)
  SharedDtor();
}

void S2C_Move::SharedDtor() {
}

void S2C_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Move::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Move& S2C_Move::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Move* S2C_Move::New(::google::protobuf::Arena* arena) const {
  S2C_Move* n = new S2C_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_Move)
  ::memset(&dwuid_, 0, reinterpret_cast<char*>(&dwy_) -
    reinterpret_cast<char*>(&dwuid_) + sizeof(dwy_));
}

bool S2C_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dwUid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_Move)
  return false;
#undef DO_
}

void S2C_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwUid = 1;
  if (this->dwuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dwuid(), output);
  }

  // uint32 dwX = 2;
  if (this->dwx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dwx(), output);
  }

  // uint32 dwY = 3;
  if (this->dwy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dwy(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_Move)
}

::google::protobuf::uint8* S2C_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwUid = 1;
  if (this->dwuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dwuid(), target);
  }

  // uint32 dwX = 2;
  if (this->dwx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dwx(), target);
  }

  // uint32 dwY = 3;
  if (this->dwy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dwy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_Move)
  return target;
}

size_t S2C_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_Move)
  size_t total_size = 0;

  // uint32 dwUid = 1;
  if (this->dwuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwuid());
  }

  // uint32 dwX = 2;
  if (this->dwx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwx());
  }

  // uint32 dwY = 3;
  if (this->dwy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_Move)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_Move)
    MergeFrom(*source);
  }
}

void S2C_Move::MergeFrom(const S2C_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dwuid() != 0) {
    set_dwuid(from.dwuid());
  }
  if (from.dwx() != 0) {
    set_dwx(from.dwx());
  }
  if (from.dwy() != 0) {
    set_dwy(from.dwy());
  }
}

void S2C_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Move::CopyFrom(const S2C_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Move::IsInitialized() const {
  return true;
}

void S2C_Move::Swap(S2C_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Move::InternalSwap(S2C_Move* other) {
  std::swap(dwuid_, other->dwuid_);
  std::swap(dwx_, other->dwx_);
  std::swap(dwy_, other->dwy_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Move::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Move

// uint32 dwUid = 1;
void S2C_Move::clear_dwuid() {
  dwuid_ = 0u;
}
::google::protobuf::uint32 S2C_Move::dwuid() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwUid)
  return dwuid_;
}
void S2C_Move::set_dwuid(::google::protobuf::uint32 value) {
  
  dwuid_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwUid)
}

// uint32 dwX = 2;
void S2C_Move::clear_dwx() {
  dwx_ = 0u;
}
::google::protobuf::uint32 S2C_Move::dwx() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwX)
  return dwx_;
}
void S2C_Move::set_dwx(::google::protobuf::uint32 value) {
  
  dwx_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwX)
}

// uint32 dwY = 3;
void S2C_Move::clear_dwy() {
  dwy_ = 0u;
}
::google::protobuf::uint32 S2C_Move::dwy() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Move.dwY)
  return dwy_;
}
void S2C_Move::set_dwy(::google::protobuf::uint32 value) {
  
  dwy_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Move.dwY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Attack::kDwTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Attack::C2S_Attack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.C2S_Attack)
}
C2S_Attack::C2S_Attack(const C2S_Attack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dwtarget_ = from.dwtarget_;
  // @@protoc_insertion_point(copy_constructor:cs.C2S_Attack)
}

void C2S_Attack::SharedCtor() {
  dwtarget_ = 0u;
  _cached_size_ = 0;
}

C2S_Attack::~C2S_Attack() {
  // @@protoc_insertion_point(destructor:cs.C2S_Attack)
  SharedDtor();
}

void C2S_Attack::SharedDtor() {
}

void C2S_Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Attack::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Attack& C2S_Attack::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Attack* C2S_Attack::New(::google::protobuf::Arena* arena) const {
  C2S_Attack* n = new C2S_Attack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Attack::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.C2S_Attack)
  dwtarget_ = 0u;
}

bool C2S_Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.C2S_Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dwTarget = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwtarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.C2S_Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.C2S_Attack)
  return false;
#undef DO_
}

void C2S_Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.C2S_Attack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwTarget = 1;
  if (this->dwtarget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dwtarget(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.C2S_Attack)
}

::google::protobuf::uint8* C2S_Attack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.C2S_Attack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dwTarget = 1;
  if (this->dwtarget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dwtarget(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.C2S_Attack)
  return target;
}

size_t C2S_Attack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.C2S_Attack)
  size_t total_size = 0;

  // uint32 dwTarget = 1;
  if (this->dwtarget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwtarget());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Attack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.C2S_Attack)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Attack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Attack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.C2S_Attack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.C2S_Attack)
    MergeFrom(*source);
  }
}

void C2S_Attack::MergeFrom(const C2S_Attack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.C2S_Attack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dwtarget() != 0) {
    set_dwtarget(from.dwtarget());
  }
}

void C2S_Attack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.C2S_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Attack::CopyFrom(const C2S_Attack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.C2S_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Attack::IsInitialized() const {
  return true;
}

void C2S_Attack::Swap(C2S_Attack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Attack::InternalSwap(C2S_Attack* other) {
  std::swap(dwtarget_, other->dwtarget_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Attack::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Attack

// uint32 dwTarget = 1;
void C2S_Attack::clear_dwtarget() {
  dwtarget_ = 0u;
}
::google::protobuf::uint32 C2S_Attack::dwtarget() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Attack.dwTarget)
  return dwtarget_;
}
void C2S_Attack::set_dwtarget(::google::protobuf::uint32 value) {
  
  dwtarget_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Attack.dwTarget)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Attack::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Attack::S2C_Attack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_Attack)
}
S2C_Attack::S2C_Attack(const S2C_Attack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:cs.S2C_Attack)
}

void S2C_Attack::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

S2C_Attack::~S2C_Attack() {
  // @@protoc_insertion_point(destructor:cs.S2C_Attack)
  SharedDtor();
}

void S2C_Attack::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2C_Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Attack::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Attack& S2C_Attack::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Attack* S2C_Attack::New(::google::protobuf::Arena* arena) const {
  S2C_Attack* n = new S2C_Attack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Attack::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_Attack)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool S2C_Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cs.S2C_Attack.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_Attack)
  return false;
#undef DO_
}

void S2C_Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_Attack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cs.S2C_Attack.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_Attack)
}

::google::protobuf::uint8* S2C_Attack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_Attack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cs.S2C_Attack.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_Attack)
  return target;
}

size_t S2C_Attack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_Attack)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Attack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_Attack)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Attack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Attack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_Attack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_Attack)
    MergeFrom(*source);
  }
}

void S2C_Attack::MergeFrom(const S2C_Attack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_Attack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void S2C_Attack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Attack::CopyFrom(const S2C_Attack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Attack::IsInitialized() const {
  return true;
}

void S2C_Attack::Swap(S2C_Attack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Attack::InternalSwap(S2C_Attack* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Attack::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Attack

// string name = 1;
void S2C_Attack::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2C_Attack::name() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Attack.name)
  return name_.GetNoArena();
}
void S2C_Attack::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cs.S2C_Attack.name)
}
#if LANG_CXX11
void S2C_Attack::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cs.S2C_Attack.name)
}
#endif
void S2C_Attack::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cs.S2C_Attack.name)
}
void S2C_Attack::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cs.S2C_Attack.name)
}
::std::string* S2C_Attack::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:cs.S2C_Attack.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2C_Attack::release_name() {
  // @@protoc_insertion_point(field_release:cs.S2C_Attack.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2C_Attack::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:cs.S2C_Attack.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_AllPos::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_AllPos::S2C_AllPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_AllPos)
}
S2C_AllPos::S2C_AllPos(const S2C_AllPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cs.S2C_AllPos)
}

void S2C_AllPos::SharedCtor() {
  _cached_size_ = 0;
}

S2C_AllPos::~S2C_AllPos() {
  // @@protoc_insertion_point(destructor:cs.S2C_AllPos)
  SharedDtor();
}

void S2C_AllPos::SharedDtor() {
}

void S2C_AllPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_AllPos::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_AllPos& S2C_AllPos::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_AllPos* S2C_AllPos::New(::google::protobuf::Arena* arena) const {
  S2C_AllPos* n = new S2C_AllPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_AllPos::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_AllPos)
  users_.Clear();
}

bool S2C_AllPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_AllPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cs.User users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_AllPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_AllPos)
  return false;
#undef DO_
}

void S2C_AllPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_AllPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cs.User users = 1;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(i), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_AllPos)
}

::google::protobuf::uint8* S2C_AllPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_AllPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cs.User users = 1;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->users(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_AllPos)
  return target;
}

size_t S2C_AllPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_AllPos)
  size_t total_size = 0;

  // repeated .cs.User users = 1;
  {
    unsigned int count = this->users_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->users(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_AllPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_AllPos)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_AllPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_AllPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_AllPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_AllPos)
    MergeFrom(*source);
  }
}

void S2C_AllPos::MergeFrom(const S2C_AllPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_AllPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
}

void S2C_AllPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_AllPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_AllPos::CopyFrom(const S2C_AllPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_AllPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AllPos::IsInitialized() const {
  return true;
}

void S2C_AllPos::Swap(S2C_AllPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_AllPos::InternalSwap(S2C_AllPos* other) {
  users_.InternalSwap(&other->users_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_AllPos::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_AllPos

// repeated .cs.User users = 1;
int S2C_AllPos::users_size() const {
  return users_.size();
}
void S2C_AllPos::clear_users() {
  users_.Clear();
}
const ::cs::User& S2C_AllPos::users(int index) const {
  // @@protoc_insertion_point(field_get:cs.S2C_AllPos.users)
  return users_.Get(index);
}
::cs::User* S2C_AllPos::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:cs.S2C_AllPos.users)
  return users_.Mutable(index);
}
::cs::User* S2C_AllPos::add_users() {
  // @@protoc_insertion_point(field_add:cs.S2C_AllPos.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::cs::User >*
S2C_AllPos::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:cs.S2C_AllPos.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::cs::User >&
S2C_AllPos::users() const {
  // @@protoc_insertion_point(field_list:cs.S2C_AllPos.users)
  return users_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cs

// @@protoc_insertion_point(global_scope)
